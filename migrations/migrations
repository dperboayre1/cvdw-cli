#!/usr/bin/env php
<?php

require '../vendor/autoload.php';

use Doctrine\DBAL\DriverManager;
use Doctrine\Migrations\Configuration\Migration\PhpFile;
use Doctrine\Migrations\Configuration\Connection\ExistingConnection;
use Doctrine\Migrations\DependencyFactory;
use Symfony\Component\Console\Application;
use Doctrine\Migrations\Tools\Console\Command;
use Symfony\Component\Dotenv\Dotenv;

$dotenv = new Dotenv();
$dotenv->load(__DIR__ . '/../.env');

    $dbConfig = [
        'DATABASE' => [
            'DB_CONNECTION' => $_ENV['DB_CONNECTION'] ?? 'pdo_mysql',
            'DB_HOST' => $_ENV["DB_HOST"] ?? 'localhost',
            'DB_PORT' => $_ENV["DB_PORT"] ?? 3306,
            'DB_DATABASE' => $_ENV["DB_DATABASE"] ?? 'cvdw',
            'DB_USERNAME' => $_ENV["DB_USERNAME"] ?? 'root',
            'DB_PASSWORD' => $_ENV["DB_PASSWORD"] ?? '',
        ]
    ];

$config = new PhpFile(dirname(__DIR__) . '/migrations/config.php');

$conn = DriverManager::getConnection([
    'dbname' => $dbConfig['DATABASE']['DB_DATABASE'],
    'user' => $dbConfig['DATABASE']['DB_USERNAME'],
    'password' => $dbConfig['DATABASE']['DB_PASSWORD'],
    'host' => $dbConfig['DATABASE']['DB_HOST'],
    'driver' => $dbConfig['DATABASE']['DB_CONNECTION'],
]);

$dependencyFactory = DependencyFactory::fromConnection($config, new ExistingConnection($conn));

$cli = new Application('Doctrine Migrations');
$cli->setCatchExceptions(true);

$cli->addCommands(array(
    new Command\DumpSchemaCommand($dependencyFactory),
    new Command\ExecuteCommand($dependencyFactory),
    new Command\GenerateCommand($dependencyFactory),
    new Command\LatestCommand($dependencyFactory),
    new Command\ListCommand($dependencyFactory),
    new Command\MigrateCommand($dependencyFactory),
    new Command\RollupCommand($dependencyFactory),
    new Command\StatusCommand($dependencyFactory),
    new Command\SyncMetadataCommand($dependencyFactory),
    new Command\VersionCommand($dependencyFactory),
    new Command\DiffCommand($dependencyFactory)
));

$cli->run();
?>